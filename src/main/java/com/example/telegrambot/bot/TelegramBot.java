package com.example.telegrambot.bot;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Telegram-–±–æ—Ç–∞.
 * –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç TelegramLongPollingBot ‚Äî —Ä–µ–∂–∏–º –æ–ø—Ä–æ—Å–∞ (polling).
 * –ü–æ–º–µ—á–µ–Ω –∫–∞–∫ @Component ‚Äî Spring —Å–æ–∑–¥–∞—Å—Ç –µ–≥–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.
 */
@Component
public class TelegramBot extends TelegramLongPollingBot {

    // –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π (–ª—É—á—à–µ, —á–µ–º System.out)
    private static final Logger log = LoggerFactory.getLogger(TelegramBot.class);

    // –¢–æ–∫–µ–Ω –∏ username –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∏–∑ application.yml
    @Value("\${bot.token}")
    private String botToken;

    @Value("\${bot.username}")
    private String botUsername;

    /**
     * –ú–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param update ‚Äî –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
     */
    @Override
    public void onUpdateReceived(Update update) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            Long chatId = update.getMessage().getChatId();
            String firstName = update.getMessage().getFrom().getFirstName();

            // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            log.info("–ü–æ–ª—É—á–µ–Ω–æ –æ—Ç {} (@{}): {}", chatId,
                    update.getMessage().getFrom().getUserName(), messageText);

            // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            SendMessage message = new SendMessage();
            message.setChatId(chatId.toString()); // chatId –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
            if ("/start".equals(messageText)) {
                message.setText("–ü—Ä–∏–≤–µ—Ç, " + firstName + "! üëã\n" +
                               "–Ø ‚Äî —É—á–µ–±–Ω—ã–π –±–æ—Ç –Ω–∞ Spring Boot.\n" +
                               "–ü–æ–∫–∞ —è —É–º–µ—é —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—á–∞—Ç—å, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –º–Ω–æ–≥–æ–º—É!");
            } else {
                // –≠—Ö–æ-–æ—Ç–≤–µ—Ç + –ø–æ–¥—Å–∫–∞–∑–∫–∞
                message.setText("–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: " + messageText + "\n" +
                               "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start");
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            try {
                execute(message);
                log.info("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {}", chatId);
            } catch (TelegramApiException e) {
                // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {}", chatId, e);
            }
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç username –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥)
     */
    @Override
    public String getBotUsername() {
        return botUsername;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥)
     */
    @Override
    public String getBotToken() {
        return botToken;
    }
}
